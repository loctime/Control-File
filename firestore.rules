rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Files - owner can access, or public read for Cloudflare Worker
    match /files/{fileId} {
      // Permitir lectura pública (necesario para Cloudflare Worker)
      // Seguro porque: solo se puede acceder con ID exacto del archivo
      allow read: if true;
      // Solo el dueño puede escribir/eliminar
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Folders - only owner can access
    match /folders/{folderId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Upload sessions - only owner can access
    match /uploadSessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }
    
    // Shares - public read (necesario para Cloudflare Worker), owner can write
    match /shares/{shareId} {
      // Permitir lectura pública sin autenticación
      // Seguro porque: solo se puede acceder con token exacto del share
      allow read: if true;
      // Solo el dueño puede escribir/eliminar
      allow write: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }
  }
}
