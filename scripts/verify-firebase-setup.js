// scripts/verify-firebase-setup.js
const { initializeApp } = require('firebase/app');
const { getAuth, GoogleAuthProvider } = require('firebase/auth');

console.log('üîç Verificando configuraci√≥n completa de Firebase...\n');

// Configuraci√≥n de Firebase
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: 'controlstorage-eb796.firebaseapp.com',
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
};

console.log('üìã Configuraci√≥n de Firebase:');
console.log('‚úÖ API Key:', firebaseConfig.apiKey ? 'Configurado' : '‚ùå Faltante');
console.log('‚úÖ Auth Domain:', firebaseConfig.authDomain);
console.log('‚úÖ Project ID:', firebaseConfig.projectId ? 'Configurado' : '‚ùå Faltante');
console.log('‚úÖ Storage Bucket:', firebaseConfig.storageBucket ? 'Configurado' : '‚ùå Faltante');
console.log('‚úÖ Messaging Sender ID:', firebaseConfig.messagingSenderId ? 'Configurado' : '‚ùå Faltante');
console.log('‚úÖ App ID:', firebaseConfig.appId ? 'Configurado' : '‚ùå Faltante');

// Verificar variables faltantes
const missingVars = [];
if (!firebaseConfig.apiKey) missingVars.push('NEXT_PUBLIC_FIREBASE_API_KEY');
if (!firebaseConfig.projectId) missingVars.push('NEXT_PUBLIC_FIREBASE_PROJECT_ID');
if (!firebaseConfig.storageBucket) missingVars.push('NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET');
if (!firebaseConfig.messagingSenderId) missingVars.push('NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID');
if (!firebaseConfig.appId) missingVars.push('NEXT_PUBLIC_FIREBASE_APP_ID');

if (missingVars.length > 0) {
  console.error('\n‚ùå Variables de entorno faltantes:', missingVars);
  process.exit(1);
}

console.log('\n‚úÖ Todas las variables de entorno est√°n configuradas');

// Inicializar Firebase
try {
  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const googleProvider = new GoogleAuthProvider();
  
  console.log('\nüöÄ Firebase inicializado correctamente');
  console.log('üîó Auth Domain configurado:', firebaseConfig.authDomain);
  console.log('üìù Project ID:', firebaseConfig.projectId);
  
  console.log('\nüìã Pasos para verificar la autenticaci√≥n:');
  console.log('1. Ve a Firebase Console: https://console.firebase.google.com');
  console.log('2. Selecciona el proyecto: controlstorage-eb796');
  console.log('3. Ve a Authentication > Settings');
  console.log('4. Verifica que "files.controldoc.app" est√© en la lista de dominios autorizados');
  console.log('5. Si no est√°, agr√©galo manualmente');
  console.log('\n6. Ve a Authentication > Sign-in method');
  console.log('7. Verifica que Google est√© habilitado');
  console.log('8. Si no est√°, habil√≠talo y configura el nombre del proyecto');
  
  console.log('\nüîó Enlaces directos:');
  console.log('‚Ä¢ Firebase Auth Settings: https://console.firebase.google.com/project/controlstorage-eb796/authentication/settings');
  console.log('‚Ä¢ Firebase Sign-in Methods: https://console.firebase.google.com/project/controlstorage-eb796/authentication/providers');
  console.log('‚Ä¢ Google Cloud OAuth: https://console.cloud.google.com/apis/credentials?project=controlstorage-eb796');
  
  console.log('\nüåê Dominios que deben estar autorizados:');
  console.log('‚Ä¢ files.controldoc.app');
  console.log('‚Ä¢ controlstorage-eb796.firebaseapp.com');
  console.log('‚Ä¢ localhost (para desarrollo)');
  
} catch (error) {
  console.error('\n‚ùå Error al inicializar Firebase:', error.message);
  process.exit(1);
}
